{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Build Watch Lib",
			"type": "npm",
			"script": "build-watch-lib",
			"group": "build",
			"isBackground": true,
			"options": {
				"statusbar": {
					"hide" : true
				}
			},
			"problemMatcher": {
				"owner": "typescript",
				"source": "ts",
				"pattern":   {
					"regexp": "^\\s*(?:ERROR in )?([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"severity": 4,
					"code": 5,
					"message": 6
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": {
						"regexp": "Compiling\\.\\.\\.$"
					},
					"endsPattern": {
						"regexp": "Compilation complete.*"
					}
				}
			},
			"presentation": {
				"group": "groupA",
				"reveal": "always",
				"panel": "new"
    	}
		},
		{
			"label": "Start: Demo Overview",
			"type": "npm",
			"script": "start:overview",
			"group": "none",
			"isBackground": true,
			"options": {
				"statusbar": {
					"hide" : true
				}
			},
			"presentation": {
				"group": "groupA",
				"reveal": "always",
				"panel": "new"
    	},
		},
		{
			"label": "Start: Demo Labs",
			"type": "npm",
			"script": "start",
			"group": "none",
			"isBackground": true,
			"options": {
				"statusbar": {
					"hide" : true
				}
			},
			"presentation": {
				"group": "groupA",
				"reveal": "always",
				"panel": "new"
    	},
		},
		{
			"label": "Demo: Overview 4104",
			"dependsOrder": "sequence",
			"dependsOn":["Build Watch Lib", "Start: Demo Overview"]
		},
		{
			"label": "Demo: Labs 4103",
			"dependsOrder": "sequence",
			"dependsOn":["Build Watch Lib", "Start: Demo Labs"]
		},
		{
			"label": "Build: Prod",
			"type": "npm",
			"script": "build-prod-lib",
			"group": "none",
			"isBackground": true,
			"presentation": {
				"group": "groupA",
				"reveal": "always",
				"panel": "new"
    	},
			"options": {
				"statusbar": {
					"hide" : true
				}
			},
			"problemMatcher": {
				"owner": "typescript",
				"source": "ts",
				"pattern":   {
					"regexp": "^\\s*(?:ERROR in )?([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"severity": 4,
					"code": 5,
					"message": 6
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": {
						"regexp": "Building\\.\\.\\.$"
					},
					"endsPattern": {
						"regexp": "Build at.*"
					}
				}
			},
		},
		{
			"label": "Publish",
			"type": "shell",
			"command": "cd dist/ngx-smz-ui;npm publish",
			"group": "none",
			"isBackground": true,
			"presentation": {
				"group": "groupRelease",
				"reveal": "always",
				"panel": "shared"
    	},
			"options": {
				"statusbar": {
					"hide" : true
				}
			}
		},
		{
			"label": "Lib: Release",
			"dependsOrder": "sequence",
			"dependsOn":["Version", "Commit", "Build: Prod", "Publish"]
		},
		{
			"label": "Version",
			"type": "shell",
			"command": "cd projects/ngx-smz-ui && npm version ${input:newVersionType}",
			"presentation": {
				"group": "groupRelease",
				"reveal": "always",
				"panel": "shared"
    	},
			"options": {
				"statusbar": {
					"hide" : false
				}
			}
		},
		{
			"label": "Commit",
			"type": "shell",
			"command": "git add . && git commit -m \"feat: ${input:newVersionType} | ${input:newVersionDescription}\"",
			"presentation": {
				"group": "groupRelease",
				"reveal": "always",
				"panel": "shared"
    	},
			"options": {
				"statusbar": {
					"hide" : true
				}
			}
		}
	],
	"inputs": [
		{
				"id": "newVersionType",
				"description": "patch, minor, major, prepatch, preminor, premajor or prerelease",
				"default": "patch",
				"type": "promptString"
		},
		{
			"id": "newVersionDescription",
			"description": "New version description",
			"default": "Release",
			"type": "promptString"
	},
]
}